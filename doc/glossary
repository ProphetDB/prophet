Wikipedia Fallacies_of_Distributed_Computing

The Fallacies of Distributed Computing are a set of common but flawed assumptions made by programmers when first developing distributed applications. The fallacies are summarized as follows [1]:

   1. The network is reliable.
   2. Latency is zero.
   3. Bandwidth is infinite.
   4. The network is secure.
   5. Topology doesn't change.
   6. There is one administrator.
   7. Transport cost is zero.
   8. The network is homogeneous.


nihao

Glossary:


Database
    A term to describe a uniquely identified set of object types and records sharing a single 'base' revision and Replica identifier
    A database contains multiple Records
    
Replica
    An instance of a database. Replicas are expected to contain all Changesets from any other replica they have been synchronized with, but those Changesets are not guaranteed to be in the same sequence on each replica
    
Changeset
    A changeset contains "old" and "new" versions of a set of database "Records", they can be of any Record Type.

Change
    An entry in a changeset. Contains all the updates to a given record for this changeset
   
Record
    A Record is composed of zero or more Attributes and a universally unique identifier. Each record is categorized into a Record Type.
        
    (Discussion:    Really? I was just storing them under different dirs in the database. the goal was to provide a little separation between different kinds of nodes for managability.

(ah fine. then need to forget about changing types ;)    
indeed. 


Record Type 
    A Record Type is a category or "bucket" for zero or more records applications may define specific behaviours for Records of a certain Record Type, but Prophet does no more than to tag Records with a Record Type.
Record Types are uniquely identified with a textual name and a UUID
    
    

Attribute
    A key-value pair on a Record.    

Conflict
    A Conflict occurs when a Changeset is being applied and the current state of a Replica meets any of the following criteria:

        * The Replica already contains a node marked as "created" in the changeset
        * The Replica doesn't contain a node marked as "deleted" in the changeset
        * The Replica doesn't contain a node marked as "updated" in the changeset
        * The Replica contains a node marked as "updated" in the changeset, but the current state of the properties on the node does not match the "old" state of the node in the changeset.
    
Resolution
    When the local Replica 
