#!/usr/bin/perl
use warnings;
use strict;

use Prophet::CLI;
my $prophet = Prophet->new();
my $cli_handle = Prophet::CLI->new();
$cli_handle->parse_record_cmd_args();

my $record = Prophet::Record->new(handle => $prophet->handle, type => $cli_handle->type);


$record->load(uuid => $cli_handle->uuid);

print "id: ".$record->uuid."\n";
my $props = $record->get_props();

for (keys %$props) {
print $_.": ".$props->{$_}."\n";
}


my $nodes = $record->history;
for my $node (@$nodes) {
print "="x40 ."\n";
print $node->rev.'@'. $node->date .' <'.$node->author.">\n";
print "- should show source information\n";
print " - should skip merge info if not in a verbose mode";
print $node->msg."\n" if ($node->msg);
for my $key ( keys %{ $node->prop_changes } ) {
    print "$key ";
    if (   $node->prop_changes->{$key}->{'add'}
        && $node->prop_changes->{$key}->{'del'} )
    {

        print "changed from '"
            . $node->prop_changes->{$key}->{'add'}
            . "' to '"
            . $node->prop_changes->{$key}->{'del'} . "'\n"

    } elsif ( $node->prop_changes->{$key}->{'add'} ) {
        print "added '" . $node->prop_changes->{$key}->{'add'} . "'\n";
    } elsif ( $node->prop_changes->{$key}->{'del'} ) {
        print "removed '" . $node->prop_changes->{$key}->{'del'} . "'\n";
    }
}
}
